E#ifndef have_Src_pattern_globals
E#define have_Src_pattern_globals
E
Xzpc_strings
Eextern mod_import_variable const char*zpc_strings[ZPC_COUNT];
Xzpc_disables
Eextern mod_import_variable char zpc_disables[ZPC_COUNT];
Eextern char zpc_special[ZPC_COUNT];
Lstatic void patadd _((char*add,int ch,long n,int paflags));
Eextern void patcompstart _((void));
Xpatcompile
Eextern mod_import_function Patprog patcompile _((char*exp,int inflags,char**endexp));
Lstatic long patcompswitch _((int paren,int*flagp));
Lstatic long patcompbranch _((int*flagp,int paren));
Eextern int patgetglobflags _((char**strp,long*assertp,int*ignore));
Xrange_type
Eextern mod_import_function int range_type _((char*start,int len));
Xpattern_range_to_string
Eextern mod_import_function int pattern_range_to_string _((char*rangestr,char*outstr));
Lstatic long patcomppiece _((int*flagp,int paren));
Lstatic long patcompnot _((int paren,int*flagsp));
Lstatic long patnode _((long op));
Lstatic void patinsert _((long op,int opnd,char*xtra,int sz));
Lstatic void pattail _((long p,long val));
Lstatic void patoptail _((long p,long val));
Eextern int errsfound;
Eextern int forceerrs;
Eextern void pattrystart _((void));
Lstatic void patmungestring _((char**string,int*stringlen,int*unmetalenin));
Xpatallocstr
Eextern mod_import_function char*patallocstr _((Patprog prog,char*string,int stringlen,int unmetalen,int force,Patstralloc patstralloc));
Xpattry
Eextern mod_import_function int pattry _((Patprog prog,char*string));
Xpattrylen
Eextern mod_import_function int pattrylen _((Patprog prog,char*string,int len,int unmetalen,Patstralloc patstralloc,int offset));
Xpattryrefs
Eextern mod_import_function int pattryrefs _((Patprog prog,char*string,int stringlen,int unmetalenin,Patstralloc patstralloc,int patoffset,int*nump,int*begp,int*endp));
Eextern int patmatchlen _((void));
Lstatic int patmatch _((Upat prog));
E#ifdef MULTIBYTE_SUPPORT
L#ifdef MULTIBYTE_SUPPORT
Xmb_patmatchrange
Eextern mod_import_function int mb_patmatchrange _((char*range,wchar_t ch,int zmb_ind,wint_t*indptr,int*mtp));
Xmb_patmatchindex
Eextern mod_import_function int mb_patmatchindex _((char*range,wint_t ind,wint_t*chr,int*mtp));
E#endif /* MULTIBYTE_SUPPORT */
L#endif /* MULTIBYTE_SUPPORT */
Xpatmatchrange
Eextern mod_import_function int patmatchrange _((char*range,int ch,int*indptr,int*mtp));
E#ifndef MULTIBYTE_SUPPORT
L#ifndef MULTIBYTE_SUPPORT
Xpatmatchindex
Eextern mod_import_function int patmatchindex _((char*range,int ind,int*chr,int*mtp));
E#endif /* MULTIBYTE_SUPPORT */
L#endif /* MULTIBYTE_SUPPORT */
Lstatic int patrepeat _((Upat p,char*charstart));
Xfreepatprog
Eextern mod_import_function void freepatprog _((Patprog prog));
Eextern int pat_enables _((const char*cmd,char**patp,int enable));
Eextern unsigned int savepatterndisables _((void));
Eextern void startpatternscope _((void));
Eextern void restorepatterndisables _((unsigned int disables));
Eextern void endpatternscope _((void));
Eextern void clearpatterndisables _((void));
Xhaswilds
Eextern mod_import_function int haswilds _((char*str));
E
E#endif /* !have_Src_pattern_globals */
